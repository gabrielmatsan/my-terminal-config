# Garante que o Homebrew está no PATH (importante para M1/M2/M3 Macs)
fish_add_path -p /opt/homebrew/bin
fish_add_path -p /opt/homebrew/sbin

# Configurações existentes do Fish
set SPACEFISH_PROMPT_ADD_NEWLINE false

# Inicialização do Starship Prompt (usando caminho absoluto)
/opt/homebrew/bin/starship init fish | source

# --------------------
# ALIASES
# --------------------
# Alias para 'cat' usando 'bat' com tema dinâmico baseado no modo do macOS
if type -q bat
    function cat
        if defaults read --globalDomain AppleInterfaceStyle &> /dev/null
            # Se o comando acima for bem-sucedido (geralmente indica Modo Escuro ativado)
            bat --theme=default $argv
        else
            bat --theme=GitHub $argv
        end
    end
end

alias l 'ls -la'
if type -q eza
    alias ls 'eza --color=always --long --git --no-filesize --icons=always --no-user --no-time --no-permissions'
end

# Alias para 'cd' usando 'z' (apenas se zoxide estiver instalado)
if type -q zoxide
    alias cd z
end

# --------------------
# FZF (Fuzzy Finder)
# --------------------
# Inicializa bindings do FZF para Fish
if type -q fzf
    fzf --fish | source
end

# Opções para FZF CTRL-T
set -gx FZF_CTRL_T_OPTS "\
--style full \
--walker-skip .git,node_modules,target \
--preview 'bat -n --color=always {}' \
--bind 'ctrl-/:change-preview-window(down|hidden|)'"

# --------------------
# ZOXIDE (Navegação de diretórios inteligente)
# --------------------
if type -q zoxide
    zoxide init fish | source
end

# --------------------
# VARIÁVEIS DE AMBIENTE E PATH
# --------------------

# Bun
set -gx BUN_INSTALL "$HOME/.bun"
if test -d "$BUN_INSTALL/bin"
    fish_add_path -g "$BUN_INSTALL/bin"
end

# Bun completions (usando o método correto para Fish)
if type -q bun
    # Cria o diretório de completions se não existir
    if not test -d ~/.config/fish/completions
        mkdir -p ~/.config/fish/completions
    end

    # Gera as completions específicas para Fish
    bun completions fish > ~/.config/fish/completions/bun.fish 2>/dev/null
end

# pnpm
set -gx PNPM_HOME "$HOME/Library/pnpm"
if test -d "$PNPM_HOME"
    fish_add_path -g "$PNPM_HOME"
end

# Herd Lite
if test -d "$HOME/.config/herd-lite/bin"
    fish_add_path -g "$HOME/.config/herd-lite/bin"
    set -gx PHP_INI_SCAN_DIR "$HOME/.config/herd-lite/bin"
end

# Herd PHP 8.3
set -l herd_path "$HOME/Library/Application Support/Herd"
if test -d "$herd_path/bin"
    fish_add_path -g "$herd_path/bin"
    set -gx HERD_PHP_83_INI_SCAN_DIR "$herd_path/config/php/83/"
end

# Java
if type -q /usr/libexec/java_home
    set -gx JAVA_HOME (command /usr/libexec/java_home)
    fish_add_path -g "$JAVA_HOME/bin"
end

# Go
if type -q go
    set -q GOPATH; or set -gx GOPATH (go env GOPATH)
    if test -d "$GOPATH/bin"
        fish_add_path -g "$GOPATH/bin"
    end
end

# rbenv
if type -q rbenv
    if test -d "$HOME/.rbenv/bin"
        fish_add_path -g "$HOME/.rbenv/bin"
    end
    rbenv init - | source
end

# Codeium Windsurf
if test -d "$HOME/.codeium/windsurf/bin"
    fish_add_path -g "$HOME/.codeium/windsurf/bin"
end

# Editor Preferido
if test -n "$SSH_CONNECTION"
    set -gx EDITOR 'vim'
else
    if type -q nvim
        set -gx EDITOR 'nvim'
    else
        set -gx EDITOR 'vim'
    end
end

# LANG
set -gx LANG en_US.UTF-8

# ARCHFLAGS
if type -q uname
    set -gx ARCHFLAGS "-arch "(uname -m)
end

# Para garantir que os caminhos do usuário tenham precedência
if test -d "$HOME/.local/bin"
    fish_add_path -g "$HOME/.local/bin"
end

# Mensagem de boas-vindas
#echo "Bem-vindo ao Fish Shell, Gabriel!"
